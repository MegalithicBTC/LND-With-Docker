# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0csigner.proto\x12\x07signrpc\"3\n\nKeyLocator\x12\x12\n\nkey_family\x18\x01 \x01(\x05\x12\x11\n\tkey_index\x18\x02 \x01(\x05\"L\n\rKeyDescriptor\x12\x15\n\rraw_key_bytes\x18\x01 \x01(\x0c\x12$\n\x07key_loc\x18\x02 \x01(\x0b\x32\x13.signrpc.KeyLocator\")\n\x05TxOut\x12\r\n\x05value\x18\x01 \x01(\x03\x12\x11\n\tpk_script\x18\x02 \x01(\x0c\"\xc4\x01\n\x0eSignDescriptor\x12(\n\x08key_desc\x18\x01 \x01(\x0b\x32\x16.signrpc.KeyDescriptor\x12\x14\n\x0csingle_tweak\x18\x02 \x01(\x0c\x12\x14\n\x0c\x64ouble_tweak\x18\x03 \x01(\x0c\x12\x16\n\x0ewitness_script\x18\x04 \x01(\x0c\x12\x1e\n\x06output\x18\x05 \x01(\x0b\x32\x0e.signrpc.TxOut\x12\x0f\n\x07sighash\x18\x07 \x01(\r\x12\x13\n\x0binput_index\x18\x08 \x01(\x05\"L\n\x07SignReq\x12\x14\n\x0craw_tx_bytes\x18\x01 \x01(\x0c\x12+\n\nsign_descs\x18\x02 \x03(\x0b\x32\x17.signrpc.SignDescriptor\"\x1c\n\x08SignResp\x12\x10\n\x08raw_sigs\x18\x01 \x03(\x0c\"2\n\x0bInputScript\x12\x0f\n\x07witness\x18\x01 \x03(\x0c\x12\x12\n\nsig_script\x18\x02 \x01(\x0c\">\n\x0fInputScriptResp\x12+\n\rinput_scripts\x18\x01 \x03(\x0b\x32\x14.signrpc.InputScript\"m\n\x0eSignMessageReq\x12\x0b\n\x03msg\x18\x01 \x01(\x0c\x12$\n\x07key_loc\x18\x02 \x01(\x0b\x32\x13.signrpc.KeyLocator\x12\x13\n\x0b\x64ouble_hash\x18\x03 \x01(\x08\x12\x13\n\x0b\x63ompact_sig\x18\x04 \x01(\x08\"$\n\x0fSignMessageResp\x12\x11\n\tsignature\x18\x01 \x01(\x0c\"B\n\x10VerifyMessageReq\x12\x0b\n\x03msg\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\x0c\x12\x0e\n\x06pubkey\x18\x03 \x01(\x0c\"\"\n\x11VerifyMessageResp\x12\r\n\x05valid\x18\x01 \x01(\x08\"\x80\x01\n\x10SharedKeyRequest\x12\x18\n\x10\x65phemeral_pubkey\x18\x01 \x01(\x0c\x12(\n\x07key_loc\x18\x02 \x01(\x0b\x32\x13.signrpc.KeyLocatorB\x02\x18\x01\x12(\n\x08key_desc\x18\x03 \x01(\x0b\x32\x16.signrpc.KeyDescriptor\"\'\n\x11SharedKeyResponse\x12\x12\n\nshared_key\x18\x01 \x01(\x0c\x32\xd4\x02\n\x06Signer\x12\x34\n\rSignOutputRaw\x12\x10.signrpc.SignReq\x1a\x11.signrpc.SignResp\x12@\n\x12\x43omputeInputScript\x12\x10.signrpc.SignReq\x1a\x18.signrpc.InputScriptResp\x12@\n\x0bSignMessage\x12\x17.signrpc.SignMessageReq\x1a\x18.signrpc.SignMessageResp\x12\x46\n\rVerifyMessage\x12\x19.signrpc.VerifyMessageReq\x1a\x1a.signrpc.VerifyMessageResp\x12H\n\x0f\x44\x65riveSharedKey\x12\x19.signrpc.SharedKeyRequest\x1a\x1a.signrpc.SharedKeyResponseB/Z-github.com/lightningnetwork/lnd/lnrpc/signrpcb\x06proto3')



_KEYLOCATOR = DESCRIPTOR.message_types_by_name['KeyLocator']
_KEYDESCRIPTOR = DESCRIPTOR.message_types_by_name['KeyDescriptor']
_TXOUT = DESCRIPTOR.message_types_by_name['TxOut']
_SIGNDESCRIPTOR = DESCRIPTOR.message_types_by_name['SignDescriptor']
_SIGNREQ = DESCRIPTOR.message_types_by_name['SignReq']
_SIGNRESP = DESCRIPTOR.message_types_by_name['SignResp']
_INPUTSCRIPT = DESCRIPTOR.message_types_by_name['InputScript']
_INPUTSCRIPTRESP = DESCRIPTOR.message_types_by_name['InputScriptResp']
_SIGNMESSAGEREQ = DESCRIPTOR.message_types_by_name['SignMessageReq']
_SIGNMESSAGERESP = DESCRIPTOR.message_types_by_name['SignMessageResp']
_VERIFYMESSAGEREQ = DESCRIPTOR.message_types_by_name['VerifyMessageReq']
_VERIFYMESSAGERESP = DESCRIPTOR.message_types_by_name['VerifyMessageResp']
_SHAREDKEYREQUEST = DESCRIPTOR.message_types_by_name['SharedKeyRequest']
_SHAREDKEYRESPONSE = DESCRIPTOR.message_types_by_name['SharedKeyResponse']
KeyLocator = _reflection.GeneratedProtocolMessageType('KeyLocator', (_message.Message,), {
  'DESCRIPTOR' : _KEYLOCATOR,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.KeyLocator)
  })
_sym_db.RegisterMessage(KeyLocator)

KeyDescriptor = _reflection.GeneratedProtocolMessageType('KeyDescriptor', (_message.Message,), {
  'DESCRIPTOR' : _KEYDESCRIPTOR,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.KeyDescriptor)
  })
_sym_db.RegisterMessage(KeyDescriptor)

TxOut = _reflection.GeneratedProtocolMessageType('TxOut', (_message.Message,), {
  'DESCRIPTOR' : _TXOUT,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.TxOut)
  })
_sym_db.RegisterMessage(TxOut)

SignDescriptor = _reflection.GeneratedProtocolMessageType('SignDescriptor', (_message.Message,), {
  'DESCRIPTOR' : _SIGNDESCRIPTOR,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SignDescriptor)
  })
_sym_db.RegisterMessage(SignDescriptor)

SignReq = _reflection.GeneratedProtocolMessageType('SignReq', (_message.Message,), {
  'DESCRIPTOR' : _SIGNREQ,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SignReq)
  })
_sym_db.RegisterMessage(SignReq)

SignResp = _reflection.GeneratedProtocolMessageType('SignResp', (_message.Message,), {
  'DESCRIPTOR' : _SIGNRESP,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SignResp)
  })
_sym_db.RegisterMessage(SignResp)

InputScript = _reflection.GeneratedProtocolMessageType('InputScript', (_message.Message,), {
  'DESCRIPTOR' : _INPUTSCRIPT,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.InputScript)
  })
_sym_db.RegisterMessage(InputScript)

InputScriptResp = _reflection.GeneratedProtocolMessageType('InputScriptResp', (_message.Message,), {
  'DESCRIPTOR' : _INPUTSCRIPTRESP,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.InputScriptResp)
  })
_sym_db.RegisterMessage(InputScriptResp)

SignMessageReq = _reflection.GeneratedProtocolMessageType('SignMessageReq', (_message.Message,), {
  'DESCRIPTOR' : _SIGNMESSAGEREQ,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SignMessageReq)
  })
_sym_db.RegisterMessage(SignMessageReq)

SignMessageResp = _reflection.GeneratedProtocolMessageType('SignMessageResp', (_message.Message,), {
  'DESCRIPTOR' : _SIGNMESSAGERESP,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SignMessageResp)
  })
_sym_db.RegisterMessage(SignMessageResp)

VerifyMessageReq = _reflection.GeneratedProtocolMessageType('VerifyMessageReq', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYMESSAGEREQ,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.VerifyMessageReq)
  })
_sym_db.RegisterMessage(VerifyMessageReq)

VerifyMessageResp = _reflection.GeneratedProtocolMessageType('VerifyMessageResp', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYMESSAGERESP,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.VerifyMessageResp)
  })
_sym_db.RegisterMessage(VerifyMessageResp)

SharedKeyRequest = _reflection.GeneratedProtocolMessageType('SharedKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _SHAREDKEYREQUEST,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SharedKeyRequest)
  })
_sym_db.RegisterMessage(SharedKeyRequest)

SharedKeyResponse = _reflection.GeneratedProtocolMessageType('SharedKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _SHAREDKEYRESPONSE,
  '__module__' : 'signer_pb2'
  # @@protoc_insertion_point(class_scope:signrpc.SharedKeyResponse)
  })
_sym_db.RegisterMessage(SharedKeyResponse)

_SIGNER = DESCRIPTOR.services_by_name['Signer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z-github.com/lightningnetwork/lnd/lnrpc/signrpc'
  _SHAREDKEYREQUEST.fields_by_name['key_loc']._options = None
  _SHAREDKEYREQUEST.fields_by_name['key_loc']._serialized_options = b'\030\001'
  _KEYLOCATOR._serialized_start=25
  _KEYLOCATOR._serialized_end=76
  _KEYDESCRIPTOR._serialized_start=78
  _KEYDESCRIPTOR._serialized_end=154
  _TXOUT._serialized_start=156
  _TXOUT._serialized_end=197
  _SIGNDESCRIPTOR._serialized_start=200
  _SIGNDESCRIPTOR._serialized_end=396
  _SIGNREQ._serialized_start=398
  _SIGNREQ._serialized_end=474
  _SIGNRESP._serialized_start=476
  _SIGNRESP._serialized_end=504
  _INPUTSCRIPT._serialized_start=506
  _INPUTSCRIPT._serialized_end=556
  _INPUTSCRIPTRESP._serialized_start=558
  _INPUTSCRIPTRESP._serialized_end=620
  _SIGNMESSAGEREQ._serialized_start=622
  _SIGNMESSAGEREQ._serialized_end=731
  _SIGNMESSAGERESP._serialized_start=733
  _SIGNMESSAGERESP._serialized_end=769
  _VERIFYMESSAGEREQ._serialized_start=771
  _VERIFYMESSAGEREQ._serialized_end=837
  _VERIFYMESSAGERESP._serialized_start=839
  _VERIFYMESSAGERESP._serialized_end=873
  _SHAREDKEYREQUEST._serialized_start=876
  _SHAREDKEYREQUEST._serialized_end=1004
  _SHAREDKEYRESPONSE._serialized_start=1006
  _SHAREDKEYRESPONSE._serialized_end=1045
  _SIGNER._serialized_start=1048
  _SIGNER._serialized_end=1388
# @@protoc_insertion_point(module_scope)
